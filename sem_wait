#include <stdio.h> 
#include <pthread.h> 
#include <semaphore.h> 
#include <unistd.h> 
#include <errno.h>
  
sem_t mutex; 
  
void* thread(void* arg) 
{ 
    //wait 
    int value;
    sem_trywait(&mutex); 
       

    sem_getvalue(&mutex, &value);
    printf("%d\n",value);

    //critical section 
    sleep(4); 
      
    //signal 

    printf("\nJust Exiting...\n"); 
    sem_post(&mutex);
    sem_getvalue(&mutex, &value);
    printf("%d\n",value);

} 
  
  
int main() 
{ 
    sem_init(&mutex, 0, 1); 
    pthread_t t1,t2; 
    pthread_create(&t1,NULL,thread,NULL); 
    sleep(2); 
    pthread_create(&t2,NULL,thread,NULL); 
    pthread_join(t1,NULL); 
    pthread_join(t2,NULL); 
    sem_destroy(&mutex); 
    return 0; 
} 
